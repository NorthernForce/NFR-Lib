plugins {
  id 'cpp'
  id 'java'
  id 'google-test'
  id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
  id 'edu.wpi.first.NativeUtils' version '2023.11.1'
  id 'edu.wpi.first.GradleJni' version '1.0.0'
  id 'edu.wpi.first.GradleVsCode' version '1.3.0'
<<<<<<< HEAD
  id "edu.wpi.first.GradleRIO" version "2023.4.3"
}
=======

>>>>>>> cf71853 (Updated build.gradle)

ext.pubVersion = '0.0.1'
ext.json_version = "1.0"

apply plugin: "cpp"
apply plugin: "java"

repositories {
  mavenCentral()
}
if (project.hasProperty('releaseMode')) {
  wpilibRepositories.addAllReleaseRepositories(project)
} else {
  wpilibRepositories.addAllDevelopmentRepositories(project)
}

// Apply C++ configuration
apply from: 'config.gradle'

// Apply Java configuration
dependencies {
    implementation 'edu.wpi.first.cscore:cscore-java:2023.+'
    implementation 'edu.wpi.first.cameraserver:cameraserver-java:2023.+'
    implementation 'edu.wpi.first.ntcore:ntcore-java:2023.+'
    implementation 'edu.wpi.first.wpilibj:wpilibj-java:2023.+'
    implementation 'edu.wpi.first.wpiutil:wpiutil-java:2023.+'
    implementation 'edu.wpi.first.wpimath:wpimath-java:2023.+'
    implementation 'edu.wpi.first.hal:hal-java:2023.+'
    implementation "org.ejml:ejml-simple:0.41"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.12.4"
    implementation "com.fasterxml.jackson.core:jackson-core:2.12.4"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.4"
    implementation 'edu.wpi.first.thirdparty.frc2023.opencv:opencv-java:4.6.0-2'
    implementation wpi.java.vendor.java()
}

// Set up exports properly
nativeUtils {
  exportsConfigs {
    // Main library is just default empty. This will export everything
    NFRLib {
    }
  }
}

model {
  components {
    NFRLib(NativeLibrarySpec) {
      sources {
        cpp {
          source {
            srcDirs 'src/main/native/cpp'
            include '**/*.cpp'
          }
          exportedHeaders {
            srcDirs 'src/main/native/include'
          }
        }
      }
      nativeUtils.useRequiredLibrary(it, 'wpilib_shared')
    }
  }
  testSuites {
    NFRLibTest {
        sources.cpp {
            source {
                srcDir 'src/test/native/cpp'
                include '**/*.cpp'
            }
        }

        nativeUtils.useRequiredLibrary(it, "wpilib_executable_shared", "googletest_static")
    }
  }
}

def libFileInput = file("src/generate/NFRLib.json.in")
ext.libFileOutput = file("$buildDir/generated/vendordeps/NFRLib.json")

task generateVendorJson() {
    description = "Generates the vendor JSON file"

    outputs.file libFileOutput
    inputs.file libFileInput

    def github_key
    'http://www.ethersmith.com/frc172/github.txt'.toURL().withReader { reader ->
      github_key = reader.readLine()
    }

    doLast {
        println "Writing version ${pubVersion} to $libFileOutput"

        if (libFileOutput.exists()) {
            libFileOutput.delete()
        }

        def read = libFileInput.text.replace('${lib_version}', pubVersion)
        read = read.replace('${json_version}', json_version)
        read = read.replace('${key}', github_key)
        libFileOutput.write(read)
    }
    outputs.upToDateWhen { false }
}

build.dependsOn generateVendorJson

apply from: 'publish.gradle'

wrapper {
  gradleVersion '7.5.1'
}
